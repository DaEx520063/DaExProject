#!/usr/bin/env python3
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS (Large File Storage)
‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏ô Git repository
"""

import os
import sys
import subprocess
import platform

def run_command(command, description=""):
    """
    ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    
    Args:
        command (str): ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ô
        description (str): ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
    """
    if description:
        print(f"\nüîß {description}")
        print(f"   ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: {command}")
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')
        
        if result.stdout:
            print("   ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
            for line in result.stdout.strip().split('\n'):
                if line.strip():
                    print(f"     {line}")
        
        if result.stderr:
            print("   ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:")
            for line in result.stderr.strip().split('\n'):
                if line.strip():
                    print(f"     {line}")
        
        return result.returncode == 0
        
    except Exception as e:
        print(f"   ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False

def check_git_installed():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Git ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git...")
    return run_command("git --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô Git")

def check_git_lfs_installed():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Git LFS ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà"""
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS...")
    return run_command("git lfs version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô Git LFS")

def install_git_lfs():
    """‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS"""
    system = platform.system().lower()
    
    print(f"üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ö‡∏ô {system}...")
    
    if system == "windows":
        # Windows - ‡πÉ‡∏ä‡πâ Chocolatey ‡∏´‡∏£‡∏∑‡∏≠ winget
        if run_command("choco --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Chocolatey"):
            return run_command("choco install git-lfs -y", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô Chocolatey")
        elif run_command("winget --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö winget"):
            return run_command("winget install GitHub.GitLFS", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô winget")
        else:
            print("   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö package manager (Chocolatey ‡∏´‡∏£‡∏∑‡∏≠ winget)")
            print("   üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Chocolatey ‡∏´‡∏£‡∏∑‡∏≠ winget ‡∏Å‡πà‡∏≠‡∏ô")
            return False
    
    elif system == "darwin":  # macOS
        if run_command("brew --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Homebrew"):
            return run_command("brew install git-lfs", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô Homebrew")
        else:
            print("   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Homebrew")
            print("   üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Homebrew ‡∏Å‡πà‡∏≠‡∏ô: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"")
            return False
    
    elif system == "linux":
        # Linux - ‡πÉ‡∏ä‡πâ package manager ‡∏ï‡πà‡∏≤‡∏á‡πÜ
        if run_command("apt --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö apt"):
            return run_command("sudo apt update && sudo apt install git-lfs -y", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô apt")
        elif run_command("yum --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö yum"):
            return run_command("sudo yum install git-lfs -y", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô yum")
        elif run_command("dnf --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö dnf"):
            return run_command("sudo dnf install git-lfs -y", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô dnf")
        elif run_command("pacman --version", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö pacman"):
            return run_command("sudo pacman -S git-lfs", "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏ú‡πà‡∏≤‡∏ô pacman")
        else:
            print("   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö package manager ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö")
            return False
    
    else:
        print(f"   ‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£: {system}")
        return False

def setup_git_lfs():
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS"""
    print("‚öôÔ∏è  ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS...")
    
    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Git LFS
    if not run_command("git lfs install", "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Git LFS"):
        return False
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Git repository ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if not os.path.exists(".git"):
        print("   ‚ùå ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Git repository")
        print("   üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ .git ‡∏Å‡πà‡∏≠‡∏ô")
        return False
    
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà
    lfs_patterns = [
        "*.sql",
        "*.db", 
        "*.xlsx",
        "*.xls",
        "*.csv",
        "*.pdf",
        "*.zip",
        "*.tar.gz"
    ]
    
    print("   üìù ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS patterns...")
    for pattern in lfs_patterns:
        run_command(f"git lfs track \"{pattern}\"", f"‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÑ‡∏ü‡∏•‡πå {pattern}")
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏° .gitattributes
    if run_command("git add .gitattributes", "‡πÄ‡∏û‡∏¥‡πà‡∏° .gitattributes"):
        print("   ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° .gitattributes ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    else:
        print("   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° .gitattributes ‡πÑ‡∏î‡πâ")
    
    return True

def show_git_lfs_status():
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Git LFS"""
    print("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Git LFS...")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°
    run_command("git lfs track", "‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° Git LFS")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå LFS ‡πÉ‡∏ô repository
    run_command("git lfs ls-files", "‡πÑ‡∏ü‡∏•‡πå LFS ‡πÉ‡∏ô repository")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    run_command("git lfs status", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Git LFS")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üöÄ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS")
    print("=" * 50)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Git
    if not check_git_installed():
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Git ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git ‡∏Å‡πà‡∏≠‡∏ô")
        return
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Git LFS
    if check_git_lfs_installed():
        print("‚úÖ Git LFS ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß")
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS
        if setup_git_lfs():
            print("\n‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            show_git_lfs_status()
        else:
            print("\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS ‡πÑ‡∏î‡πâ")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Git LFS")
        
        # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS
        if install_git_lfs():
            print("\n‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            
            # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS
            if setup_git_lfs():
                print("\n‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                show_git_lfs_status()
            else:
                print("\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git LFS ‡πÑ‡∏î‡πâ")
        else:
            print("\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git LFS ‡πÑ‡∏î‡πâ")
            print("\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á:")
            print("   1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://git-lfs.github.com/")
            print("   2. ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
            print("   3. ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")

if __name__ == "__main__":
    main()
